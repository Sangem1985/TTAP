//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TTAP.APTONLINEPGSERVICE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EncryptDEcryptSoap", Namespace="http://tempuri.org/")]
    public partial class EncryptDEcrypt : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EncryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSumforRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSumforResponseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EncryptDEcrypt() {
            this.Url = global::TTAP.Properties.Settings.Default.TTAP_APTONLINEPGSERVICE_EncryptDEcrypt;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EncryptCompletedEventHandler EncryptCompleted;
        
        /// <remarks/>
        public event DecryptCompletedEventHandler DecryptCompleted;
        
        /// <remarks/>
        public event CheckSumforRequestCompletedEventHandler CheckSumforRequestCompleted;
        
        /// <remarks/>
        public event CheckSumforResponseCompletedEventHandler CheckSumforResponseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Encrypt(string request) {
            object[] results = this.Invoke("Encrypt", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptAsync(string request) {
            this.EncryptAsync(request, null);
        }
        
        /// <remarks/>
        public void EncryptAsync(string request, object userState) {
            if ((this.EncryptOperationCompleted == null)) {
                this.EncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptOperationCompleted);
            }
            this.InvokeAsync("Encrypt", new object[] {
                        request}, this.EncryptOperationCompleted, userState);
        }
        
        private void OnEncryptOperationCompleted(object arg) {
            if ((this.EncryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptCompleted(this, new EncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Decrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Decrypt(string request) {
            object[] results = this.Invoke("Decrypt", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptAsync(string request) {
            this.DecryptAsync(request, null);
        }
        
        /// <remarks/>
        public void DecryptAsync(string request, object userState) {
            if ((this.DecryptOperationCompleted == null)) {
                this.DecryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptOperationCompleted);
            }
            this.InvokeAsync("Decrypt", new object[] {
                        request}, this.DecryptOperationCompleted, userState);
        }
        
        private void OnDecryptOperationCompleted(object arg) {
            if ((this.DecryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptCompleted(this, new DecryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSumforRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckSumforRequest(string rquestId, string clientId, string serviceid, string paymentmode, double baseamount, string checksumkey) {
            object[] results = this.Invoke("CheckSumforRequest", new object[] {
                        rquestId,
                        clientId,
                        serviceid,
                        paymentmode,
                        baseamount,
                        checksumkey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSumforRequestAsync(string rquestId, string clientId, string serviceid, string paymentmode, double baseamount, string checksumkey) {
            this.CheckSumforRequestAsync(rquestId, clientId, serviceid, paymentmode, baseamount, checksumkey, null);
        }
        
        /// <remarks/>
        public void CheckSumforRequestAsync(string rquestId, string clientId, string serviceid, string paymentmode, double baseamount, string checksumkey, object userState) {
            if ((this.CheckSumforRequestOperationCompleted == null)) {
                this.CheckSumforRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSumforRequestOperationCompleted);
            }
            this.InvokeAsync("CheckSumforRequest", new object[] {
                        rquestId,
                        clientId,
                        serviceid,
                        paymentmode,
                        baseamount,
                        checksumkey}, this.CheckSumforRequestOperationCompleted, userState);
        }
        
        private void OnCheckSumforRequestOperationCompleted(object arg) {
            if ((this.CheckSumforRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSumforRequestCompleted(this, new CheckSumforRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSumforResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckSumforResponse(string rquestId, string PgRefNo, string baseamount, string servcieid, string checksumkey) {
            object[] results = this.Invoke("CheckSumforResponse", new object[] {
                        rquestId,
                        PgRefNo,
                        baseamount,
                        servcieid,
                        checksumkey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSumforResponseAsync(string rquestId, string PgRefNo, string baseamount, string servcieid, string checksumkey) {
            this.CheckSumforResponseAsync(rquestId, PgRefNo, baseamount, servcieid, checksumkey, null);
        }
        
        /// <remarks/>
        public void CheckSumforResponseAsync(string rquestId, string PgRefNo, string baseamount, string servcieid, string checksumkey, object userState) {
            if ((this.CheckSumforResponseOperationCompleted == null)) {
                this.CheckSumforResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSumforResponseOperationCompleted);
            }
            this.InvokeAsync("CheckSumforResponse", new object[] {
                        rquestId,
                        PgRefNo,
                        baseamount,
                        servcieid,
                        checksumkey}, this.CheckSumforResponseOperationCompleted, userState);
        }
        
        private void OnCheckSumforResponseOperationCompleted(object arg) {
            if ((this.CheckSumforResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSumforResponseCompleted(this, new CheckSumforResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EncryptCompletedEventHandler(object sender, EncryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DecryptCompletedEventHandler(object sender, DecryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckSumforRequestCompletedEventHandler(object sender, CheckSumforRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSumforRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSumforRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckSumforResponseCompletedEventHandler(object sender, CheckSumforResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSumforResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSumforResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591